@startuml
actor "Организатор" as Org
actor "Пользователь" as User
participant "Клиент" as Client
participant "API" as API
database "База данных" as DB
participant "Уведомления" as Notif
participant "Календарь" as Cal

' Организатор обновляет событие:
Org -> Client: Запрос: обновить событие
Client -> API: Передать данные обновления
API -> DB: Обновить запись события
DB --> API: Подтверждение
API --> Client: Обновлено
Org <-- Client: Отображено обновление

' Организатор отменяет событие:
Org -> Client: Запрос: отменить событие
Client -> API: Передать команду отмены
API -> DB: Изменить статус на "отменено"
DB --> API: Подтверждение
API -> Notif: Расослать уведомления
API --> Client: Отменено
Org <-- Client: Отображено отменение

' Организатор просматривает участников:
Org -> Client: Запрос: список участников
Client -> API: Получить регистрации
API -> DB: Читать записи регистраций
DB --> API: Список участников
API --> Client: Передать список
Org <-- Client: Отобразить список

' Организатор интегрирует событие с календарём:
Org -> Client: Запрос: интегрировать с календарём
Client -> API: Передать данные для синхронизации
API -> Cal: Синхронизировать событие
Cal --> API: Подтверждение
API --> Client: Интегрировано
Org <-- Client: Отображено интегрирование

' Пользователь просматривает события:
User -> Client: Запрос: список событий
Client -> API: Получить список событий
API -> DB: Читать события
DB --> API: Список событий
API --> Client: Передать список
User <-- Client: Отобразить список

' Пользователь регистрируется:
User -> Client: Запрос: регистрация на событие
Client -> API: Создать запись регистрации
API -> DB: Сохранить регистрацию
DB --> API: Подтверждение
API -> Notif: Запланировать напоминание
API --> Client: Зарегистрирован
User <-- Client: Отобразить статус регистрации

' Пользователь оставляет оценку:
User -> Client: Запрос: оставить оценку
Client -> API: Передать оценку
API -> DB: Сохранить оценку
DB --> API: Подтверждение
API --> Client: Оценено
User <-- Client: Отобразить оценку

@enduml